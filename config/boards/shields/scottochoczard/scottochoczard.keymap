#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAC 0
#define WINDOWS 1
#define GAME 2
#define CODE 3
#define NUMBER 4
#define FUNCTION 5

/ {
    
    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            display-name = "Mac";
            bindings = <
                        &kp Q         &kp W    &kp F     &kp P    &kp G                            &kp J     &kp L          &kp U       &kp Y   &kp BSPC       
                        &kp A         &kp R    &kp S     &kp T    &kp D                            &kp H     &kp N          &kp E       &kp I   &kp O          
                        &kp LSHFT     &kp X    &kp C     &kp V    &kp B                            &kp K     &kp M          &kp COMMA   &kp DOT &kp RSHFT  
                &lt MAC &lt WINDOWS            &lt GAME           &lt CODE &kp SPACE  &lt FUNCTION &kp TAB                  &lt NUMBER          &kp BSPC  &kp ENTER 
            >;
        };

        windows_default_layer {
            display-name = "Windows";
            bindings = <
                                  &kp Q             &kp W &kp F     &kp P    &kp G           &kp J        &kp L            &kp U     &kp Y   &kp BSPC       
                                  &kp A             &kp R &kp S     &kp T    &kp D           &kp H        &kp N            &kp E     &kp I   &kp O          
                                  &kp LSHFT         &kp X &kp C     &kp V    &kp B           &kp K        &kp M            &kp COMMA &kp DOT &kp RSHFT
                                  &none &none &kp LCTRL &kp LALT &kp LCTRL       &lt CODE     &lt NUMBER       &none     &none   &none      
            >;
        };

        gaming_layer {
            display-name = "Gaming";
            bindings = <
                  &kp Q   &kp W &kp F  &kp P     &kp G     &kp J        &kp L            &kp U     &kp Y   &kp BSPC       
                  &kp A   &kp R &kp S  &kp T     &kp D     &kp H        &kp N            &kp E     &kp I   &kp O          
                  &kp Z   &kp X &kp C  &kp V     &kp B     &kp K        &kp M            &kp COMMA &kp DOT &kp RSHFT 
                  &kp ESC &kp K &kp J  &kp LCTRL &kp SPACE &lt CODE     &lt NUMBER       &none     &none   &none          
            >;
        };

        code_layer {
            display-name = "Code";
            bindings = <
                &kp UNDER      &kp MINUS &kp PLUS &kp EQUAL &kp COLON &kp GRAVE &kp C_PREV   &kp C_PP   &kp C_NEXT   &kp DEL        
                &kp LBRC       &kp LPAR  &kp RPAR &kp RBRC  &kp PIPE  &kp ESC   &kp LEFT     &kp UP     &kp DOWN     &kp RIGHT      
                &kp LSHFT      &kp APOS  &kp DQT  &kp RBKT  &kp SEMI  &kp TILDE &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &kp RSHFT 
                &trans         &trans    &trans   &trans    &trans    &trans    &trans       &trans     &trans       &trans         
            >;
        };

        number_layer {
            display-name = "Number";
            bindings = < 
                 &kp EXCL  &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp ASTERISK &kp CAPS &kp BSPC  
                 &kp N1    &kp N2 &kp N3   &kp N4   &kp N5       &kp N6    &kp N7   &kp N8       &kp N9   &kp N0    
                 &kp LSHFT &none  &none    &none    &mo FUNCTION &none     &none    &kp COMMA    &kp DOT  &kp RSHFT 
                 &trans    &trans &trans   &trans   &trans       &trans    &trans   &trans       &trans   &trans    
            >;
        };

        function_layer {
            display-name = "Function";
            bindings =<
                &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none  &none  &to GAME  &to MAC  &to WINDOWS 
                &kp F1       &kp F2         &kp F3       &kp F4       &kp F5        &kp 6  &kp F7 &kp F8 &kp F9        &kp F10     
                &kp F11      &studio_unlock &bt BT_CLR   &bootloader  &none         &none  &none  &none  &none         &kp F12     
                &trans       &trans         &trans       &trans       &trans        &trans &trans &trans &trans        &trans     
            >;
        };
    };
};